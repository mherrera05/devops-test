- hosts: all
  become: yes

  pre_tasks:
    - name: Update apt cache if needed.
      apt: update_cache=yes cache_valid_time=3600

  tasks:
    - name: Install Pip.
      apt: name=python-pip state=present
      become: yes

    - name: Add Docker GPG key
      apt_key: url=https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

    - name: Install list of packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - ipython
        - docker-ce

    - name: Install Docker Python library.
      pip: name=docker-py state=present
      become: yes

    - name: Add vagrant user to docker group.
      user:
        name: vagrant
        groups: docker
        append: yes
      become: yes

    - name: Install Docker Compose
      pip:
        name: docker-compose
        version: 1.18.0
      state: present

    - name: Run portainer with docker composer
      hosts: localhost
      connection: local
      gather_facts: no
      tasks:
        - docker_service:
            project_src: docker-compose.yml
            state: absent

        # - docker_service:
        #     project_name: portainer
        #     definition:
        #         db:
        #           image: postgres
        #         web:
        #           build: "{{ playbook_dir }}/portainer"
        #           command: "python manage.py runserver 0.0.0.0:8000"
        #           volumes:
        #             - "{{ playbook_dir }}/flask:/code"
        #           ports:
        #             - "8000:8000"
        #           links:
        #             - db
        #   register: output

        # - debug:
        #     var: output

        # - assert:
        #     that:
        #       - "web.flask_web_1.state.running"
        #       - "db.flask_db_1.state.running"


      shell: docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer